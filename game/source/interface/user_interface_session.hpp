#pragma once

#include "cseries/cseries.hpp"

class c_game_variant;
class c_map_variant;
struct game_options;
struct s_campaign_armaments;
struct s_campaign_game_progression;
struct s_hub_progression;
struct s_player_configuration;
struct s_player_identifier;
struct s_saved_film_description;

extern bool __cdecl user_interface_squad_set_session_advertisement(e_gui_network_session_advertisement_mode advertisement_mode);
extern e_campaign_difficulty_level __cdecl user_interface_game_settings_get_campaign_difficulty();
extern int16 __cdecl user_interface_game_settings_get_campaign_insertion_point();
extern e_campaign_metagame_scoring __cdecl user_interface_game_settings_get_campaign_metagame_scoring();
extern const s_saved_film_description* __cdecl user_interface_game_settings_get_film();
extern const c_game_variant* __cdecl user_interface_game_settings_get_game_variant();
extern e_session_game_mode __cdecl user_interface_get_session_game_mode();
extern e_session_game_start_status __cdecl user_interface_get_session_game_start_status(e_session_game_start_error* error, uns32* player_error_mask);
extern bool __cdecl user_interface_interactive_session_is_squad();
extern void __cdecl user_interface_leave_sessions(e_user_interface_session_leave_type leave_type, e_user_interface_session_leave_reason leave_reason);
extern int32 __cdecl user_interface_local_player_count();
extern e_controller_index user_interface_session_get_controller_index(int32 player_index);
extern bool __cdecl user_interface_session_get_map(e_campaign_id* campaign_id, e_map_id* map_id);
extern int32 __cdecl user_interface_session_get_player_at_local_controller(e_controller_index controller_index);
extern s_player_configuration* __cdecl user_interface_session_get_player_data(int32 session_player_index);
extern const s_player_identifier* __cdecl user_interface_squad_get_player_identifier(int32 session_player_index);
extern bool __cdecl user_interface_session_is_local_player(int32 player_index);
extern bool __cdecl user_interface_squad_is_player_valid(int32 player_index);
extern bool __cdecl user_interface_session_is_verifying_strings();
extern int32 __cdecl user_interface_squad_get_player_index(const s_player_identifier* identifier);
extern uns64 __cdecl user_interface_session_player_get_player_xuid(const s_player_identifier* identifier);
extern void __cdecl user_interface_session_string_verify_update();
extern bool __cdecl user_interface_squad_delegate_leadership(int32 player_index);
extern bool __cdecl user_interface_squad_exists();
extern int32 __cdecl user_interface_squad_get_countdown_delaying_player();
extern int32 __cdecl user_interface_squad_get_countdown_timer();
extern int32 __cdecl user_interface_squad_get_local_player_count();
extern int32 __cdecl user_interface_squad_get_machine_count();
extern int32 __cdecl user_interface_squad_get_player_count();
extern const s_player_configuration* __cdecl user_interface_squad_get_player_data(int32 session_player_index);
extern const s_player_identifier* __cdecl user_interface_session_get_player_identifier(int32 session_player_index);
extern e_network_session_class __cdecl user_interface_squad_get_session_class();
extern e_gui_game_mode __cdecl user_interface_squad_get_ui_game_mode();
extern bool __cdecl user_interface_squad_in_matchmaking();
extern bool __cdecl user_interface_squad_in_or_after_countdown();
extern bool __cdecl user_interface_squad_local_peer_is_host();
extern bool __cdecl user_interface_squad_local_peer_is_leader();
extern bool __cdecl user_interface_squad_set_campaign_active_primary_skulls(uns32 active_skulls_primary);
extern bool __cdecl user_interface_squad_set_campaign_active_secondary_skulls(uns32 active_skulls_secondary);
extern bool __cdecl user_interface_squad_set_campaign_difficulty(e_campaign_difficulty_level campaign_difficulty);
extern bool __cdecl user_interface_squad_set_campaign_insertion_point(int16 campaign_insertion_point);
extern bool __cdecl user_interface_squad_set_campaign_level(e_campaign_id campaign_id, e_map_id map_id);
extern bool __cdecl user_interface_squad_set_campaign_metagame_scoring(e_campaign_metagame_scoring campaign_metagame_scoring);
extern bool __cdecl user_interface_squad_set_campaign_progress(e_campaign_id campaign_id, e_map_id map_id, int16 campaign_inserion_point, s_campaign_armaments* player_armaments, s_campaign_game_progression* game_progression, s_hub_progression* hub_progression);
extern bool __cdecl user_interface_squad_set_film(const s_saved_film_description* description);
extern bool __cdecl user_interface_squad_set_film_internal(const s_saved_film_description* description, bool needs_verification);
extern bool __cdecl user_interface_squad_set_game_variant(const c_game_variant* game_variant);
extern bool __cdecl user_interface_squad_set_multiplayer_map(const c_map_variant* map_variant);
extern bool __cdecl user_interface_squad_set_multiplayer_map_internal(const c_map_variant* map_variant, bool needs_verification);
extern bool __cdecl user_interface_squad_set_saved_film_game_options(int32 length_in_ticks, int32 start_tick, const game_options* options);
extern bool __cdecl user_interface_squad_start_countdown_timer(e_controller_index controller_index, int32 countdown_timer, int32 accelerate_countdown_timer);
extern bool __cdecl user_interface_squad_stop_countdown_timer(e_controller_index controller_index, int32 countdown_timer, bool halo2);

